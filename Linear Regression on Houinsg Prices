#importing libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures,StandardScaler
from sklearn.linear_model import Ridge
from sklearn.metrics import mean_squared_error,r2_score

#reading the dataset
df = pd.read_csv('BostonHousing.csv')

#columns for X
X = df[['crim','zn','indus','chas','nox','rm','age','tax','ptratio','b','lstat',
]]

#target
y = df['medv']

# training and splitting the data
X_train,X_test,y_train,y_test= train_test_split(X,y,test_size = 0.3,random_state=42)

#fitting the model
lr = LinearRegression()
lr.fit(X_train,y_train)

#preprocessing
# applying Polynomialfeatures
poly = PolynomialFeatures(degree= 2, include_bias = False)
X_train_poly = poly.fit_transform(X_train)
X_test_poly = poly.transform(X_test)

# standardizing values
scaler = StandardScaler()
X_train_scaler = scaler.fit_transform(X_train_poly)
X_test_scaler = scaler.transform(X_test_poly)

# training ridge regression
ridge = Ridge(alpha=1.0)
ridge.fit(X_train_scaler,y_train)
y_pred = ridge.predict(X_test_scaler)

#evaluate the model
mse = mean_squared_error(y_test,y_pred)
r2 = r2_score(y_test,y_pred)

print('MSE:',mse)
print('r2 Score:',r2)
